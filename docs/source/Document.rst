Document
========

Объект является базовым объектом для всех типов документов.
Обладает базовым набором свойств и методов, которые также работают для всех производных типов документов.


.. rubric:: Свойства

:Type:
  **Строка, чтение** - тип документа

:TypeNamedId:
  **Строка, чтение** - строковый идентификатор типа документа

:DocumentFunction:
  **Строка, чтение** - функция документа

:Version:
  **Строка, чтение** - информация о версии XSD схемы, в соотвествии с которой сформирован документ

:Organization:
  :doc:`Organization <Organization>` **, чтение** - организация, которая отправила исходящий документ, либо получила входящий документ

:OrganizationId:
  **Строка, чтение** - идентификатор организации, которой принадлежит документ

:Counteragent:
  :doc:`Counteragent <Counteragent>` **, чтение** - контрагент документа

:DocumentId:
  **Строка, чтение** - идентификатор документа

:OneSDocumentId:
  **Строка, чтение** - дополнительный идентификатор документа

:PackageId:
  **Строка, чтение** - идентификатор пакета

:Direction:
  **Строка, чтение** - направление документа

:Department:
  :doc:`Department <Department>` **, чтение** - подразделение организации, к которому привязан документ

:FromDepartment:
  :doc:`Department <Department>` **, чтение** - подразделение организации, из которого был отправлен документ

:ToDepartment:
  :doc:`Department <Department>` **, чтение** - подразделение организации, в которое был отправлен документ

:Timestamp:
  **Дата и время, чтение** - дата и время отправки документа (в текущем часовом поясе)

:TimestampSeconds:
  **Число, чтение** - дата и время отправки документа в секундах

:DocumentDate:
  **Дата, чтение** - дата документа

:DocumentNumber:
  **Строка, чтение** - номер документа

:Title:
  **Строка, чтение** - название документа, например, ``Счет-фактура №123 от 20.02.18``

:FileName:
  **Строка, чтение** - имя файла документа, с которым он загружался в Диадок

:PathURL:
  **Строка, чтение** - URL документа, по которому он доступен в web-интерфейсе

:InitialDocumentIds:
  :doc:`Коллекция  <Collection>` **строк, чтение** - коллекция идентификаторов документов, на который ссылается данный документ (т.е. документы, которые по отношению к данному документы являются "родительскими"

:SubordinateDocumentIds:
  :doc:`Коллекция <Collection>` **строк, чтение** - коллекция идентификаторов документов, которые ссылаются на данный документ (т.е. документы, которые по отношению к данному документу являются "дочерними")

:CustomDocumentId:
  **Строка, чтение** - идентификатор документа, определяемый внешней системой

:RouteId:
  **Строка, чтение** - идентификатор маршрута согласования, на котором находится документ

:WorkflowId:
  **Целое число, чтение** - идентификатор типа документооборота

:Status:
  **Строка, чтение** - текущий статус документа в Диадоке. Перечень возможных значений зависит от типа документа и описан в спецификации соответствующего производного объекта

:ResolutionStatus:
  :doc:`ResolutionStatus <ResolutionStatus>` **, чтение** - текущий статус согласования документа

:Resolutions:
  :doc:`Коллекция <Collection>` **объектов** :doc:`Resolution <Resolution>` **, чтение** - история согласования документа

:ResolutionRequests:
  :doc:`Коллекция <Collection>` **объектов** :doc:`ResolutionRequest <ResolutionRequest>` **, чтение** - коллекция запросов на согласование

:ResolutionRequestDenials:
  :doc:`Коллекция <Collection>` **объектов** :doc:`ResolutionRequestDenial <ResolutionRequestDenial>` **, чтение** - коллекция объектов отмены запросов на согласование

:RevocationStatus:
  **Строка, чтение** - статус аннулирования документа

:SenderSignatureStatus:
  **Строка, чтение** - статус проверки ЭЦП отправителя

:RecipientResponseStatus:
  **Строка, чтение** - отвечает за состояние ответного действия со стороны получателя документа

:RoamingNotificationStatus:
  **Строка, чтение** - статус передачи документа через роуминг

:RoamingNotificationStatusDescription:
  **Строка, чтение** - описание статуса передачи документа через роуминг.

:CustomData:
  :doc:`Коллекция <Collection>` **объектов** :doc:`CustomDataItem <CustomDataItem>` **, чтение** - коллекция элементов "ключ-значение"

:Metadata:
  :doc:`Коллекция <Collection>` **объектов** :doc:`MetadataItem <MetadataItem>` **, чтение** - коллекция метаданных

:RecipientReceiptMetadata:
  :doc:`RecipientReceiptMetadata <RecipientReceiptMetadata>` **, чтение** - метаданные извещения о получении документа получателем

:ConfirmationMetadata:
  :doc:`ConfirmationMetadata <ConfirmationMetadata>` **, чтение** - метаданные подтверждения оператором отправки/получения документа или служебного документа

:AmendmentRequestMetadata:
  :doc:`AmendmentRequestMetadata <AmendmentRequestMetadata>` **, чтение** - метаданные уведомления об уточнении

:IsDeleted:
  **Булево, чтение** - флаг, показывающий, был ли удален данный документ

:IsTest:
  **Булево, чтение** - флаг, показывающий, что документ является тестовым и не имеет юридической силы

:HasCustomPrintForm:
  **Булево, чтение** - флаг, показывающий, что документ имеет нестандартную печатную форму

:IsLockedPackage:
  **Булево, чтение** - флаг, показывающий, что документ является частью нередактируемого пакета

:IsRead:
  **Булево, чтение** - флаг, показывающий, что документ был прочитан сотрудником организации

:IsEncryptedContent:
  **Булево, чтение** - флаг, показывающий, что содержимое документа зашифровано


.. rubric:: Методы

+-------------------------------+----------------------------------------+----------------------------------+
|:func:`.SaveContent`           |:func:`.GetComment`                     |:func:`.GetDocumentPackage`       |
+-------------------------------+----------------------------------------+----------------------------------+
|:func:`.SaveBuyerContent`      |:func:`.GetAnyComment`                  |:func:`.CreateReplySendTask`      |
+-------------------------------+----------------------------------------+----------------------------------+
|:func:`.SaveAllContent`        |:func:`.Move`                           |:func:`.CreateReplySendTask2`     |
+-------------------------------+----------------------------------------+----------------------------------+
|:func:`.SaveAllContentAsync`   |:func:`.Delete`                         |:func:`.CreateOutDocumentSignTask`|
+-------------------------------+----------------------------------------+----------------------------------+
|:func:`.SaveAllContentZip`     |:func:`.Approve`                        |:func:`.MarkAsRead`               |
+-------------------------------+----------------------------------------+----------------------------------+
|:func:`.SaveAllContentZipAsync`|:func:`.Disapprove`                     |:func:`.CreateCustomDataPatchTask`|
+-------------------------------+----------------------------------------+----------------------------------+
|:func:`.GetDynamicContent`     |:func:`.SetOneSDocumentId`              |:func:`.AssignToResolutionRoute`  |
+-------------------------------+----------------------------------------+----------------------------------+
|:func:`.GetBase64Content`      |:func:`.ReSetOneSDocumentId`            |:func:`.RemoveFromResolutionRoute`|
+-------------------------------+----------------------------------------+----------------------------------+
|:func:`.GetBase64ContentAsync` |:func:`.AddSubordinateOneSDocumentId`   |                                  |
+-------------------------------+----------------------------------------+----------------------------------+
|:func:`.GetBase64Signature`    |:func:`.RemoveSubordinateOneSDocumentId`|                                  |
+-------------------------------+----------------------------------------+----------------------------------+
|:func:`.GetSenderSignature`    |:func:`.CreateResolutionRequestTask`    |                                  |
+-------------------------------+----------------------------------------+----------------------------------+
|:func:`.GetRecipientSignature` |:func:`.GetPrintForm`                   |                                  |
+-------------------------------+----------------------------------------+----------------------------------+



.. function:: Document.SaveContent(FilePath)

  :FilePath: ``Строка`` Путь до файла, в который будет записан контент

  Сохраняет титул отправителя на диск



.. function:: Document.SaveBuyerContent(FilePath)

  :FilePath: ``Строка`` Путь до файла, в который будет записан контент

  Сохраняет титул получателя документа в указанный файл. Если  титул отсутсвует, то ничего не произойдёт



.. function:: Document.SaveAllContent(DirectoryPath)

  :DirectoryPath: ``Строка``

  Сохраняет все файлы, относящиеся к документу (в т.ч. электронные подписи), в указанную директорию



.. function:: Document.SaveAllContentAsync(DirectoryPath)

  :DirectoryPath: ``Строка``

  Асинхронно сохраняет все файлы, относящиеся к документу (в т.ч. электронные подписи), в указанную директорию



.. function:: Document.SaveAllContentZip(DirectoryPath)

  :DirectoryPath: ``Строка``

  Формирует архив, содержащий все файлы, относящиеся к документу (в т.ч. электронные подписи), и сохраняет его в указанную директорию



.. function:: Document.SaveAllContentZipAsync(DirectoryPath)

  :DirectoryPath: ``Строка``

  Асинхронно формирует архив, содержащий все файлы, относящиеся к документу (в т.ч. электронные подписи), и сохраняет его в указанную директорию



.. function:: Document.GetDynamicContent(WorkflowSide)

  :WorkflowSide: ``Строка``

  Возвращает :doc:`представление контента титула документа <DynamicContent>` со стороны *WorkflowSide*

  +---------------------+
  |Значение WorkflowSide|
  +---------------------+
  |Seller               |
  +---------------------+
  |Buyer                |
  +---------------------+



.. function:: Document.GetBase64Content(WorkflowSide)

  :WorkflowSide: ``Строка``

  Возвращает контент титула документа со стороны *WorkflowSide* в виде Base64 строки

  +---------------------+
  |Значение WorkflowSide|
  +---------------------+
  |Seller               |
  +---------------------+
  |Buyer                |
  +---------------------+



.. function:: Document.GetBase64ContentAsync(WorkflowSide)

  :WorkflowSide: ``Строка``

  Возвращает контент титула документа со стороны *WorkflowSide* в виде Base64 строки

  +---------------------+
  |Значение WorkflowSide|
  +---------------------+
  |Seller               |
  +---------------------+
  |Buyer                |
  +---------------------+



.. function:: Document.GetBase64Signature(WorkflowSide)

  :WorkflowSide: ``Строка``

  Возвращает подпись титула документа со стороны *WorkflowSide* в виде Base64 строки

  +---------------------+
  |Значение WorkflowSide|
  +---------------------+
  |Seller               |
  +---------------------+
  |Buyer                |
  +---------------------+



.. function:: Document.GetSenderSignature()

  Возвращает :doc:`представление подписи <Signature>` титула отправителя



.. function:: Document.GetRecipientSignature()

  Возвращает :doc:`представление подписи <Signature>` титула получателя



.. function:: Document.GetComment()

  Возвращает строку с комментарием к документу, заданным при отправке

  .. deprecated:: 5.20.3
    Используйте :func:`GetAnyComment` с типом ``AttachmentComment``



.. function:: Document.GetAnyComment(CommentType)

  Возвращает строку с комментарием определённого типа, связанным с документом

  ========================== ==================================
  Значение *CommentType*     Описание
  ========================== ==================================
  AttachmentComment          комментарий к документу
  RecipientAttachmentComment комментарий к титулу покупателя
  SignatureRejectionComment  комментарий к отказу в подписи
  AmendmentComment           комментарий к запросу на уточнение
  ========================== ==================================

  .. versionadded:: 5.20.3



.. function:: Document.Move(DepartmentId)

  :DepartmentId: ``Строка``

  Перемещает документ в указанное подразделение



.. function:: Document.Delete()

  Помечает документ как удаленный



.. function:: Document.Approve([Comment])

  :Comment: ``Строка``

  Согласует документ



.. function:: Document.Disapprove([Comment])

  :Comment: ``Строка``

  Отказывает в согласовании документа



.. function:: Document.SetOneSDocumentId(ID)

  :ID: ``Строка``

  Присваивает документу дополнительный идентификатор из учётной системы



.. function:: Document.ReSetOneSDocumentId()

  Сбрасывает дополнительный идентификатор учётной системы у документа в Диадоке



.. function:: Document.AddSubordinateOneSDocumentId(ID)

  :ID: ``Строка``

  Добавляет документу дополнительный идентификатор из учётной системы как подчинённый



.. function:: Document.RemoveSubordinateOneSDocumentId(ID)

  :ID: ``Строка``

  Удаляет дополнительный подчинённый идентификатор



.. function:: Document.CreateResolutionRequestTask()

  Создает :doc:`задание для отправки запроса на согласование <ResolutionRequestTask>`



.. function:: Document.GetPrintForm(FilePath[, Timeout])

  :FilePath: ``Строка``
  :Timeout:  ``Беззнаковое целое число``

  Получает печатную форму документа в формате ``.pdf`` и сохраняет её в указанный файл. Если расширение файла отличается от ``.pdf``, то такой файл будет создан
  Делается 5 попыток сгенерировать печатную форму. Если за 5 попыток она не получена или, если превышен таймаут, то будет сгенерировано исключение

.. function:: Document.GetDocumentPackage()

  Возвращает :doc:`пакет документов <DocumentPackage>`, в котором находится документ

  .. note:: понятие пакета в терминах компоненты и в терминах `HTTP-API <http://api-docs.diadoc.ru/ru/latest/index.html>`_ или Веб-интерфейса разные.
    В данном случае в пакете будут содержаться только те дкоументы, у которых LetterId/MessageId (первая половина DocumentId) совпадает со значением в исходном документе.
    Не стоит ожидать, что если документы связаны в пакет в веб интерфейсе, то все они вернутся в этом методе.



.. function:: Document.CreateReplySendTask(ReplyType="AcceptDocument")

  :ReplyType: ``Строка``

  Создает :doc:`задание на выполнение ответного действия с документом <ReplySendTask>`

  ============================ =================================
  Возможные значения ReplyType Описание
  ============================ =================================
  "AcceptDocument"             подписание документа
  "RejectDocument"             отказ в подписи документа
  "CorrectionRequest"          запроc на уточнение документа
  "RevocationRequest"          запроc на аннулирование документа
  "AcceptRevocation"           принятие аннулирования документа
  "RejectRevocation"           отказ от аннулирования документа
  ============================ =================================

  .. deprecated:: 5.27.0
    Используйте :func:`CreateReplySendTask2`



.. function:: Document.CreateReplySendTask2(ReplyType="AcceptDocument")

  :ReplyType: ``строка``

  Создает :doc:`задание на выполнение ответного действия с документом <ReplySendTask2>`

  ============================ =================================
  Возможные значения ReplyType Описание
  ============================ =================================
  "AcceptDocument"             подписание документа
  "RejectDocument"             отказ в подписи документа
  "CorrectionRequest"          запроc на уточнение документа
  "RevocationRequest"          запроc на аннулирование документа
  "AcceptRevocation"           принятие аннулирования документа
  "RejectRevocation"           отказ от аннулирования документа
  ============================ =================================

    .. versionadded:: 5.27.0



.. function:: Document.CreateOutDocumentSignTask()

  Создает :doc:`задание на подписание и отправку исходящего документа с отложенной отправкой <OutDocumentSignTask>`



.. function:: Document.MarkAsRead()

  Помечает, что документ как прочитанный



.. function:: Document.CreateCustomDataPatchTask()

  Создает :doc:`задание на редактирование коллекции CustomData <CustomDataPatchTask>`



.. function:: Document.AssignToResolutionRoute(RouteId[, Comment])

  :RouteId: ``строка``
  :Comment: ``строка``

  Ставит документ на маршрут согласования. Получить доступные маршруты согласования можно методом :func:`Organization.GetResolutionRoutes`



.. function:: Document.RemoveFromResolutionRoute(RouteId[, Comment])

  :RouteId: ``строка``
  :Comment: ``строка``

  Снимает документ с маршрута согласования



.. rubric:: Дополнительная информация

==================== ===================
Значение *Direction* Описание
==================== ===================
Inbound              входящий документ
Outbound             исходящий документ
Internal             внутренний документ
==================== ===================


=========================== =====================================================================
Значение *RevocationStatus* Описание
=========================== =====================================================================
RevocationStatusNone        документ не аннулирован, и не было предложений об аннулировании
RevocationIsRequestedByMe   отправлено исходящее предложение об аннулировании документа
RequestsMyRevocation        получено входящее предложение об аннулировании документа
RevocationAccepted          документ аннулирован
RevocationRejected          получен или отправлен отказ от предложения об аннулировании документа
UnknownRevocationStatus     неизвестный статус аннулирования документа
=========================== =====================================================================


=========================================== =========================================================================
Значение свойства RoamingNotificationStatus Описание
=========================================== =========================================================================
RoamingNotificationStatusNone               документ не роуминговый или документ без подтверждения доставки в роуминг
RoamingNotificationStatusSuccess            документ с подтверждением успешной доставки в роуминг
RoamingNotificationStatusError              документ с ошибкой доставки в роуминг
UnknownRoamingNotificationStatus            неизвестный роуминговый статус документа
=========================================== =========================================================================


======================================= =========================================
Значение свойства SenderSignatureStatus Описание
======================================= =========================================
WaitingForSenderSignature               ожидается подпись отправителя
SenderSignatureUnchecked                подпись отправителя еще не проверена
SenderSignatureCheckedAndValid          подпись отправителя проверена и валидна
SenderSignatureCheckedAndInvalid        подпись отправителя проверена и невалидна
UnknownSenderSignatureStatus            неизвестный статус проверки подписи
======================================= =========================================


========================================= ==================================================
Значение свойства RecipientResponseStatus Описание
========================================= ==================================================
RecipientResponseStatusUnknown            неизвестный статус ответного действия
RecipientResponseStatusNotAcceptable      ответного действия не требуется
WaitingForRecipientSignature              ожидается ответное действие получателя
WithRecipientSignature                    получатель подписал документ (ответный титул)
RecipientSignatureRequestRejected         получатель отказал в подписи
InvalidRecipientSignature                 получатель подписал документ некорректной подписью
========================================= ==================================================


========================================= ======================================================
Объекты, производные от Document          Описание
========================================= ======================================================
:doc:`Contract`                           договор
:doc:`Invoice`                            счет-фактура
:doc:`InvoiceRevision`                    исправление счета-фактуры
:doc:`InvoiceCorrection`                  корректировочный счет-фактура
:doc:`InvoiceCorrectionRevision`          исправление корректировочного счета-фактуры
:doc:`Nonformalized`                      неформализованный документ
:doc:`NonformalizedAcceptanceCertificate` акт о выполнении работ в неформализованном виде
:doc:`NonformalizedTorg12`                ТОРГ-12 в неформализованном виде
:doc:`NonformalizedProformaInvoice`       счет на оплату
:doc:`XmlAcceptanceCertificate`           акт о выполнении работ в формализованном виде
:doc:`XmlTorg12`                          ТОРГ-12 в формализованном виде
:doc:`Utd`                                универсальный передаточный документ
:doc:`UtdRevision`                        исправление универсального передаточного документа
:doc:`Ucd`                                универсальный корректировочный документ
:doc:`UcdRevision`                        исправление универсального корректировочного документа
:doc:`BaseDocument`                       документ "любого типа"
========================================= ======================================================
